---
- hosts: all

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted

  vars:
    system: "{{ lookup('file', '/home/dseelig/opt/reporting/ansible/system-vars.json') | from_json }}"
    app: "{{system.prod}}"

  tasks:
  
  - name: Install python2.7
    raw: "sudo apt-get update -qq && sudo apt-get install -qq python2.7 aptitude"

  - name: Install psycopg2
    command: sudo apt-get install -y python-psycopg2

  - name: Install unzip
    package: name=unzip state=latest
    
  - name: Install python3-software-properties
    command: apt-get install -y python3-software-properties
    become: true  
    
  - name: Install software properties
    command: apt-get install -y software-properties-common
    become: true
    
  - name: Install https driver
    command: apt-get install apt-transport-https
    become: true

  - name: install setfacl support
    become: yes
    apt: pkg=acl

  - name: Creating multiple folders
    file:
      path: "{{ item }}"
      state: directory
      mode: 0755
      group: root
      owner: root
    with_items:
      - ~/opt
      - ~/opt/reporting
      - ~/opt/reporting/bin
      - ~/opt/reporting/config
      - ~/opt/reporting/log
      - ~/opt/reporting/data

  - name: Create and write the default.properties file
    blockinfile:
      path: ~/opt/reporting/config/default.properties
      create: yes
      content: |
        db.url={{app.db.url}}
        db.driver={{app.db.driver}}
        db.user={{app.db.user}}
        db.passwd={{app.db.passwd}}
        oai.url={{app.oai.url}}
        oai.pollseconds={{app.oai.pollseconds}}
        oai.fc3compatibility={{app.oai.fc3compatibility}}
        oai.runresulthistorylengthhours={{app.oai.runresulthistorylengthhours}}
        mets.url={{app.mets.url}}
        mets.pollseconds={{app.mets.pollseconds}}
    become: true
    become_user: root

  # install postgresql 9.5
  - name: Configure the PostgreSQL APT key
    apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc state=present

  - name: Configure the PostgreSQL APT repositories
    apt_repository: repo="deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release}}-pgdg main" state=present

  - name: Install PostgreSQL
    apt: pkg={{ item }} state=present
    with_items:
      - postgresql-9.5
      - postgresql-server-dev-9.5
    become: true

  - name: Create reporting databse
    postgresql_db:
      name: reporting
    become: true
    become_user: postgres

  - postgresql_user:
      db: reporting
      name: reportingDB
      password: reportingDB
      priv: ALL
    become: true
    become_user: postgres

  - name: Overwrite postgresql.conf
    lineinfile: 
      dest=/etc/postgresql/9.5/main/postgresql.conf
      regexp="^listen_addresses"
      line="listen_addresses = '*'" state=present
    become: true

  - name: Overwrite pg_hba.conf
    copy:
      dest: "/etc/postgresql/9.5/main/pg_hba.conf"
      content: |
        local all postgres  md5
        local all all     md5
        host  all all     0.0.0.0/0 md5
    become: true
    notify: restart postgres

  - name: Upload create tables file
    template:
      src: "files/postgresql/createSequencesAndTablesProductionDB.sql"
      dest: "/home"

  - name: Create Tables
    become: true
    become_user: postgres
    shell: psql reporting < /home/createSequencesAndTablesProductionDB.sql
    ignore_errors: true
    notify: restart postgres

  - name: Delete create tables file
    command: rm /home/createSequencesAndTablesProductionDB.sql

  # install openjdk 8
  - name: Install openJDK 8
    command: sudo apt-get -y install default-jdk
    become: true
    become_user: root
    
  - shell: echo JAVA_HOME is $JAVA_HOME
    environment:
      JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64

  - file:
      src: /usr/lib/jvm/java-8-openjdk-amd64
      dest: /usr/lib/jvm/default-java
      state: link

  # install tomcat 8
  - name: Install Tomcat 8
    package: name=tomcat8 state=latest

  - name: Stop Tomcat
    command: systemctl stop tomcat8.service

  - name: Install Tomcat 8 Admin
    package: name=tomcat8-admin state=latest

  - name: Create tomcat 8 user
    blockinfile:
      path: /etc/tomcat8/tomcat-users.xml
      marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
      create: yes
      block: |
        <tomcat-users>
          <role rolename="manager-script" />
          <role rolename="manager-gui" />
          <role rolename="manager-status" />
          <role rolename="manager-jmx" />
          <role rolename="standard" />
          <role rolename="manager-admin" />
          <role rolename="admin-gui" />
          <user username="admin" password="admin" roles="standard, admin-gui, manager-gui, manager-admin, manager-script, manager-status, manager-jmx"/>
        </tomcat-users>
    become: true
    become_user: root