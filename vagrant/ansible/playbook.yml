---
- hosts: all

  handlers:
    - name: Restart Postgres
      become: true
      service: name=postgresql state=restarted

    - name: Restart Tomcat
      become: true
      service: name=tomcat8 state=restarted

  vars:
    system: "{{ lookup('file', 'system-vars.json') | from_json }}"
    app: "{{ system.prod }}"
    project: "{{ lookup('file', '../../target/classes/project.json') | from_json }}"

  tasks:
  - name: Install python stuff
    package: name={{ item }} state=latest
    with_items:
        - python2.7
        - python-psycopg2
        - python3-software-properties
    become: true
    become_user: root

  - name: Install software properties
    package: name=software-properties-common state=latest
    become: true
    become_user: root
    
  - name: Install https driver
    package: name=apt-transport-https state=latest
    become: true
    become_user: root

  - name: install setfacl support
    package: name=acl
    become: true
    become_user: root

  - name: Install PostgreSQL 9.6
    package: name={{ item }} state=present
    with_items:
        - postgresql-9.6
    become: true
    become_user: root

  - name: Grant access to database from other hosts
    become: true
    lineinfile:
        dest: /etc/postgresql/9.6/main/pg_hba.conf
        line: "{{ item }}"
    with_items:
        - host all all 0.0.0.0/0 md5
        - local all all md5
    notify: Restart Postgres

  - name: Overwrite postgresql.conf
    lineinfile: 
      dest=/etc/postgresql/9.6/main/postgresql.conf
      regexp="^listen_addresses"
      line="listen_addresses = '*'" state=present
    become: true
    notify: Restart Postgres

  - name: Create reporting database
    postgresql_db:
      name: reporting
    become: true
    become_user: postgres

  - name: Ensure PostgreSQL service is running
    service: name=postgresql state=started enabled=yes

  - name: Ensure user has access to database
    postgresql_user:
      db: reporting
      name: reportingDB
      password: reportingDB
      priv: ALL
    become: true
    become_user: postgres

  - name: Ensure user does not have unnecessary privileges
    become: true
    become_user: postgres
    postgresql_user:
        name: reportingDB
        role_attr_flags: NOSUPERUSER,NOCREATEDB
        state: present

  - name: Upload create tables file
    template:
      src: "files/postgresql/createSequencesAndTablesProductionDB.sql"
      dest: "/tmp"

  - name: Create Tables
    become: true
    become_user: postgres
    shell: psql reporting < /tmp/createSequencesAndTablesProductionDB.sql
    ignore_errors: true

  - name: Delete create tables file
    file: path=/tmp/createSequencesAndTablesProductionDB.sql state=absent

  # install openjdk 8 and set the global java_home var
  - name: Install openJDK 8
    package: name=default-jdk state=latest
    become: true
    become_user: root

  - shell: echo JAVA_HOME is $JAVA_HOME
    environment:
      JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64

  - file:
      src: /usr/lib/jvm/java-8-openjdk-amd64
      dest: /usr/lib/jvm/default-java
      state: link
    become: true
    become_user: root

  # Install libservlet3.1-java
  - name: Install libservlet3.1-java
    package: name=libservlet3.1-java state=latest
    become: true
    become_user: root

  # install tomcat 8 and tomcat modules
  - name: Install Tomcat 8
    package: name=tomcat8 state=latest
    become: true
    become_user: root

  - name: Install Tomcat 8 Admin
    package: name=tomcat8-admin state=latest
    become: true
    become_user: root

  - name: Update tomcat 8 tomcat-users
    blockinfile:
      path: /etc/tomcat8/tomcat-users.xml
      marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
      insertbefore: "</tomcat-users>"
      content: |
        <role rolename="manager-script"/>
        <role rolename="manager-gui"/>
        <role rolename="manager-status"/>
        <role rolename="manager-jmx"/>
        <role rolename="standard"/>
        <role rolename="manager-admin"/>
        <role rolename="admin-gui"/>
        <user username="admin" password="admin" roles="standard, admin-gui, manager-gui, manager-admin, manager-script, manager-status, manager-jmx"/>
    become: true
    become_user: root

  - name: Creating application folders
    file:
      path: "{{ item }}"
      state: directory
      mode: 0755
      group: tomcat8
      owner: tomcat8
    with_items:
      - /home/opt
      - /home/opt/reporting
      - /home/opt/reporting/bin
      - /home/opt/reporting/config
      - /home/opt/reporting/log
      - /home/opt/reporting/data
    become: true
    become_user: root

  - name: Create and write the default.properties file
    blockinfile:
      path: /home/opt/reporting/config/default.properties
      create: yes
      content: |
        db.url={{app.db.url}}
        db.driver={{app.db.driver}}
        db.user={{app.db.user}}
        db.passwd={{app.db.passwd}}
        oai.url={{app.oai.url}}
        oai.pollseconds={{app.oai.pollseconds}}
        oai.fc3compatibility={{app.oai.fc3compatibility}}
        oai.runresulthistorylengthhours={{app.oai.runresulthistorylengthhours}}
        mets.url={{app.mets.url}}
        mets.pollseconds={{app.mets.pollseconds}}
    become: true
    become_user: root

  - name: Deploy the reporting war file
    copy:
      src: "{{project.build.target + project.build.war}}"
      dest: /home/opt/reporting/bin
      mode: 0755
    become: true
    become_user: root

  - name: Copy context reporting xml file
    copy:
      src: "{{project.build.classes}}qucosa-fcrepo-reporting.xml"
      dest: /etc/tomcat8/Catalina/localhost/
    become: true
    become_user: root
    notify: Restart Tomcat
