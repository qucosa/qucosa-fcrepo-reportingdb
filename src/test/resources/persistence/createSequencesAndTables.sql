--
--  Copyright 2016 SLUB Dresden
-- 
--  Licensed under the Apache License, Version 2.0 (the "License");
--  you may not use this file except in compliance with the License.
--  You may obtain a copy of the License at
-- 
--  http://www.apache.org/licenses/LICENSE-2.0
-- 
--  Unless required by applicable law or agreed to in writing, software
--  distributed under the License is distributed on an "AS IS" BASIS,
--  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--  See the License for the specific language governing permissions and
--  limitations under the License.
-- 


-- Sequence: public."oairunresult_ID_seq"

-- DROP SEQUENCE IF EXISTS public."oairunresult_ID_seq";

CREATE SEQUENCE IF NOT EXISTS public."oairunresult_ID_seq"
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
ALTER TABLE public."oairunresult_ID_seq"
  OWNER TO "reportingDBUnitTest";


-- Table: public."OAIRunResult"

-- DROP TABLE IF EXISTS public."OAIRunResult";

CREATE TABLE IF NOT EXISTS public."OAIRunResult"
(
  "ID" integer NOT NULL DEFAULT nextval('"oairunresult_ID_seq"'::regclass),
  "timestampOfRun" timestamp with time zone NOT NULL, -- the timestamp this run was started, generated locally
  "responseDate" timestamp with time zone NOT NULL, -- the responseDate from the OAI response, generated by remote server
  "resumptionToken" character varying(256), -- the resumption token in case there is any
  "resumptionTokenExpirationDate" timestamp with time zone, -- the resumption token's optional expiration date
  "nextFromTimestamp" timestamp with time zone, -- the value of the 'from' parameter to be used in the next GET request not containing a resumptionToken.
  CONSTRAINT "ID" PRIMARY KEY ("ID")
)
WITH (
  OIDS=FALSE
);
ALTER TABLE public."OAIRunResult"
  OWNER TO "reportingDBUnitTest";
COMMENT ON COLUMN public."OAIRunResult"."timestampOfRun" IS 'the timestamp this run was started, generated locally';
COMMENT ON COLUMN public."OAIRunResult"."responseDate" IS 'the responseDate from the OAI response, generated by remote server';
COMMENT ON COLUMN public."OAIRunResult"."resumptionToken" IS 'the resumption token in case there is any';
COMMENT ON COLUMN public."OAIRunResult"."resumptionTokenExpirationDate" IS 'the resumption token''s optional expiration date';
COMMENT ON COLUMN public."OAIRunResult"."nextFromTimestamp" IS 'the value of the _from_ parameter to be used in the next GET request not containing a resumptionToken.';


-- Table: public."OAIHeader"

-- DROP TABLE public."OAIHeader";

CREATE TABLE IF NOT EXISTS public."OAIHeader"
(
  "recordIdentifier" character varying(256) NOT NULL, -- the record identifier of a document
  datestamp timestamp with time zone NOT NULL, -- last modification of the document
  "setSpec" character varying(256)[], -- the sets this record belongs to
  "statusIsDeleted" boolean, -- true if the header contains the status deleted element
  CONSTRAINT "recordIdentifier" PRIMARY KEY ("recordIdentifier")
)
WITH (
  OIDS=FALSE
);
ALTER TABLE public."OAIHeader"
  OWNER TO "reportingDBUnitTest";
COMMENT ON COLUMN public."OAIHeader"."recordIdentifier" IS 'the record identifier of a document';
COMMENT ON COLUMN public."OAIHeader".datestamp IS 'last modification of the document';
COMMENT ON COLUMN public."OAIHeader"."setSpec" IS 'the sets this record belongs to';
COMMENT ON COLUMN public."OAIHeader"."statusIsDeleted" IS 'true if the header contains the status deleted element';

-- Table: public."ReportingDocuments"

-- DROP TABLE public."ReportingDocuments";

CREATE TABLE IF NOT EXISTS public."ReportingDocuments"
(
  "recordIdentifier" character varying(256) NOT NULL, -- the unique identifier of this item in a repository
  mandator character varying(256) NOT NULL, -- the mandator this item is related to
  "documentType" character varying(256) NOT NULL, -- a document type such as article, book, issue
  "distributionDate" timestamp with time zone NOT NULL, -- the date this item has been published in the repository
  "headerLastModified" timestamp with time zone NOT NULL, -- the date the metadata has been updated in the repository
  CONSTRAINT "ReportingDocuments.recordIdentifier" PRIMARY KEY ("recordIdentifier")
)
WITH (
  OIDS=FALSE
);
ALTER TABLE public."ReportingDocuments"
  OWNER TO "reportingDBUnitTest";
COMMENT ON COLUMN public."ReportingDocuments"."recordIdentifier" IS 'the unique identifier of this item in a repository';
COMMENT ON COLUMN public."ReportingDocuments".mandator IS 'the mandator this item is related to';
COMMENT ON COLUMN public."ReportingDocuments"."documentType" IS 'a document type such as article, book, issue';
COMMENT ON COLUMN public."ReportingDocuments"."distributionDate" IS 'the date this item has been published in the repository';
COMMENT ON COLUMN public."ReportingDocuments"."headerLastModified" IS 'the date the metadata has been updated in the repository';


